/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import data.*;
import entidades.*;
import java.util.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class ListarHabitacion extends javax.swing.JInternalFrame {

    private Conexion con = new Conexion("jdbc:mariadb://localhost:3306/elgranhotel", "root", "");
    private Habitacion_data hd = new Habitacion_data(con);
    private TipoHabitacion_data thd = new TipoHabitacion_data(con);

    DefaultTableModel modelo = new DefaultTableModel() {
        public boolean IsCellEditable(int fila, int col) {
            return false;
        }
    };

    public ListarHabitacion() {
        initComponents();
        cargarCabecera();
        cargarCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbTipoHab = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtHabitaciones = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jtCantidad = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Tipo de Habitaci√≥n:");

        jcbTipoHab.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jcbTipoHab.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbTipoHabItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addComponent(jcbTipoHab, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTipoHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtHabitaciones.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jtHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtHabitaciones.setRowHeight(18);
        jScrollPane1.setViewportView(jtHabitaciones);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Cantidad:");

        jtCantidad.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jtCantidad.setText(" - ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtCantidad)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtCantidad))
                .addGap(110, 110, 110))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbTipoHabItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbTipoHabItemStateChanged
        if (jcbTipoHab.getSelectedItem() == null) {
            modelo.setRowCount(0);
            List<Habitacion> listahab = new ArrayList<>();
            listahab = hd.listarHabitaciones();
            String ocupada = "";
            
            for (Habitacion hab : listahab) {
                if (hab.isOcupada() == false) {
                ocupada = "Libre";
            }else{
                ocupada = "Ocupada";
            }
                modelo.addRow(new Object[]{
                    hab.getPiso(),
                    hab.getNroHabitacion(),
                    hab.getIdTipoHabitacion().getTipo(),
                    hab.getIdTipoHabitacion().getTipoCamas(),
                    hab.getIdTipoHabitacion().getCantidadPersonas(),
                    ocupada
                });
            }
        } else {
            cargarTabla();
        }
        jtCantidad.setText(""+jtHabitaciones.getRowCount());
    }//GEN-LAST:event_jcbTipoHabItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<TipoHabitacion> jcbTipoHab;
    private javax.swing.JLabel jtCantidad;
    private javax.swing.JTable jtHabitaciones;
    // End of variables declaration//GEN-END:variables

    public void cargarCabecera() {
        modelo.addColumn("Piso");
        modelo.addColumn("Numero");
        modelo.addColumn("Tipo de Habitacion");
        modelo.addColumn("Tipo de Cama");
        modelo.addColumn("Cant. Personas");
        modelo.addColumn("Disponibilidad");

        jtHabitaciones.setModel(modelo);
    }

    public void cargarTabla() {
        modelo.setRowCount(0);
        TipoHabitacion th = (TipoHabitacion) jcbTipoHab.getSelectedItem();
        List<Habitacion> listahab = new ArrayList<>();
        String ocupada = "";
        
        listahab = hd.listarPorCategoria(th);
        
        for (Habitacion hab : listahab) {
            if (hab.isOcupada() == false) {
                ocupada = "Libre";
            }else{
                ocupada = "Ocupada";
            }
            
            modelo.addRow(new Object[]{
                hab.getPiso(),
                hab.getNroHabitacion(),
                hab.getIdTipoHabitacion().getTipo(),
                hab.getIdTipoHabitacion().getTipoCamas(),
                hab.getIdTipoHabitacion().getCantidadPersonas(),                
                ocupada
            });

        }

    }

    public void cargarCombo() {
        List<TipoHabitacion> listatipo = new ArrayList<>();
        listatipo = thd.listaTipoHab();

        for (TipoHabitacion tipo : listatipo) {
            jcbTipoHab.addItem(tipo);
        }

        jcbTipoHab.setSelectedIndex(-1);
    }
}
